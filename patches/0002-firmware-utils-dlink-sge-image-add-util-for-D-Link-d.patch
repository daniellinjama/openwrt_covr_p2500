firmware-utils: dlink-sge-image: add util for D-Link devices by SGE

---
 include/image-commands.mk                  |   5 +
 scripts/dlink-sge-signature.py             |  35 +++++
 target/linux/ath79/image/generic.mk        |   4 +++
 5 files changed, 44 insertions(+)
 create mode 100755 scripts/dlink-sge-signature.py

diff --git a/include/image-commands.mk b/include/image-commands.mk
--- a/include/image-commands.mk
+++ b/include/image-commands.mk
@@ -226,6 +226,11 @@ define Build/copy-file
 	cat "$(1)" > "$@"
 endef
 
+define Build/dlink-sge-image
+	$(STAGING_DIR_HOST)/bin/dlink-sge-image $(1) $@ $@.enc
+	mv $@.enc $@
+endef
+
 define Build/edimax-header
 	$(STAGING_DIR_HOST)/bin/mkedimaximg -i $@ -o $@.new $(1)
 	@mv $@.new $@
diff --git a/scripts/dlink-sge-signature.py b/scripts/dlink-sge-signature.py
new file mode 100755
--- /dev/null
+++ b/scripts/dlink-sge-signature.py
@@ -0,0 +1,35 @@
+#!/usr/bin/env python3
+# SPDX-License-Identifier: GPL-2.0-or-later OR MIT
+#
+# Copyright (C) 2021 Sebastian Schaper <openwrt@sebastianschaper.net>
+# Copyright (C) 2023 Daniel Linjama <daniel@dev.linjama.com>
+#
+# append model string and checksums used by
+# certain D-Link devices manufactured by SGE / T&W.
+#
+# e.g. COVR-P2500 requires this to be appended to the
+# encrypted factory image, while for COVR-C1200 the
+# signature needs to be appended to the unencrypted payload
+#
+
+import binascii, hashlib, sys
+
+if len(sys.argv) != 3:
+    exit(f"usage: {sys.argv[0]} input.bin model_name")
+
+input_file = sys.argv[1]
+model_name = sys.argv[2]
+
+with open(input_file, "rb+") as fd:
+    input_bytes = fd.read()
+
+    crc32 = binascii.crc32(input_bytes)
+    m = hashlib.md5(input_bytes)
+
+    fd.write(m.hexdigest().encode())
+    fd.write(f"\n{model_name}\n".encode())
+    fd.write("{:08x}".format(crc32).encode())
+
+    exit()
+
+exit(1)
diff --git a/target/linux/ath79/image/generic.mk b/target/linux/ath79/image/generic.mk
--- a/target/linux/ath79/image/generic.mk
+++ b/target/linux/ath79/image/generic.mk
@@ -32,6 +32,10 @@ define Build/cybertan-trx
 	-rm $@-empty.bin
 endef
 
+define Build/dlink-sge-signature
+	$(TOPDIR)/scripts/dlink-sge-signature.py $@ $(1)
+endef
+
 define Build/edimax-headers
 	$(eval edimax_magic=$(word 1,$(1)))
 	$(eval edimax_model=$(word 2,$(1)))
