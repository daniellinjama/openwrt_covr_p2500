diff --git a/target/linux/ath79/generic/base-files/etc/init.d/plc b/target/linux/ath79/generic/base-files/etc/init.d/plc
new file mode 100755
--- /dev/null
+++ b/target/linux/ath79/generic/base-files/etc/init.d/plc
@@ -0,0 +1,295 @@
+#!/bin/sh /etc/rc.common
+
+USE_PROCD=1
+
+START=60
+STOP=80
+
+EXTRA_COMMANDS="setup"
+EXTRA_HELP="	setup Download firmware files"
+
+. $IPKG_INSTROOT/lib/functions/system.sh
+
+mtd_get_key() {
+	local mtdname="$1"
+	local key="$2"
+	local part
+	local value_dirty
+
+	part=$(find_mtd_part "$mtdname")
+	if [ -z "$part" ]; then
+		echo "mtd_get_key: partition $mtdname not found!" >&2
+		return
+	fi
+
+	value_dirty=$(strings "$part" | sed -n 's/^'"$key"'=//p')
+
+	echo "$value_dirty"
+}
+
+board=$(board_name)
+
+if [ ! -f $IPKG_INSTROOT/etc/config/plc ] || [ "$(uci show plc 2>/dev/null)" = "" ]; then
+	touch $IPKG_INSTROOT/etc/config/plc
+	uci set plc.config=config
+	uci commit plc
+fi
+
+start_service() {
+	local NvmPath
+	local PibPath
+	local Mac
+	local device
+	local NmkSelected
+	local NetworkPasswd
+	local Nmk
+	local Dek
+	local Dak
+	local AdapterName
+	local Enabled
+	local Network
+	local pibpath_tmp
+
+	config_load plc
+	config_get NvmPath config NvmPath
+	config_get PibPath config PibPath
+	config_get Mac config Mac
+	config_get NmkSelected config NmkSelected
+	config_get NetworkPasswd config NetworkPasswd
+	config_get Nmk config Nmk
+	config_get Dek config Dek
+	config_get Dak config Dak
+	config_get AdapterName config AdapterName
+	config_get Enabled config Enabled
+	config_get Network config Network
+	config_load network
+	config_get device plc device
+
+	if [ -z "$NvmPath" ]; then
+		echo "plc.config.NvmPath not defined" >&2
+		exit 1
+	fi
+	if [ ! -f "$NvmPath" ]; then
+		echo "plc.config.NvmPath does not exist" >&2
+		exit 1
+	fi
+
+	if [ -z "$PibPath" ]; then
+		echo "plc.config.PibPath not defined" >&2
+		exit 1
+	fi
+	if [ ! -f "$PibPath" ]; then
+		echo "plc.config.PibPath file does not exist" >&2
+		exit 1
+	fi
+	if [ -z "$Mac" ]; then
+		Mac="$(mtd_get_mac_ascii art protest_plc_mac)"
+	fi
+	if [ -z "$device" ]; then
+		echo "network.plc.device not defined" >&2
+		exit 1
+	fi
+
+	# Create modded pib
+	pibpath_tmp="${PibPath}.tmp"
+	rm -f "$pibpath_tmp"
+	cp "$PibPath" "$pibpath_tmp"
+
+	# Patch MAC into pib
+	if [ ! -z "$Mac" ]; then
+		modpib -M "$Mac" "$pibpath_tmp"
+	fi
+
+	# Patch NMK
+	if [ 'true' != "$NmkSelected" ]; then
+		if [ -z "$NetworkPwd" ]; then
+			NetworkPwd="$(nmk_get_key art plc_networkpwd)"
+		fi
+		Nmk="$(hpavkey -M "$NetworkPwd")"
+	fi
+	if [ ! -z "$Nmk" ]; then
+		modpib -N "$Nmk" "$pibpath_tmp"
+	fi
+
+	# Patch DAK
+	if [ -z "$Dek" ]; then
+		if [ -z "$Dak" ]; then
+			Dek="$(mtd_get_key art plc_dek)"
+
+			if [ ! -z "$Dek" ]; then
+				Dak="$(hpavkey -D "$Dek")"
+			fi
+		fi
+	else
+		Dak="$(hpavkey -D "$Dek")"
+	fi
+	if [ ! -z "$Dak" ]; then
+		modpib -D "$Dak" "$pibpath_tmp"
+	fi
+
+	# Patch USR
+	if [ -z "$AdapterName" ]; then
+		AdapterName="$(uci get system.@system[0].hostname)"
+	fi
+	modpib -U "$AdapterName" -S "D-Link COVR-P2500" -T "$NetworkPwd" "$pibpath_tmp"
+
+	if [ -z "$Enabled" ]; then
+		echo "plc.config.Enabled not defined" >&2
+		exit 1
+	fi
+	if [ "$Enabled" -ne 1 ]; then
+		echo "plc.config.Enabled is not 1" >&2
+		exit 1
+	fi
+
+	cd /tmp
+
+	for i in $(seq 1 30); do
+		if [ -d /sys/class/net/$device ]; then
+			break
+		fi
+		sleep 1s
+	done
+
+	procd_open_instance plchost
+
+	procd_set_param command /usr/bin/plchost -i "$device" -N "$NvmPath" -P "$pibpath_tmp"
+	procd_set_param file /etc/config/plc
+	procd_set_param stdout 1
+	procd_set_param stderr 1
+	procd_set_param netdev "$device"
+	procd_close_instance
+
+	if [ ! -z "$Network" ]; then
+		procd_open_instance bridge_control
+		procd_set_param command /bin/sh -c 'logread -l 0 -f | (while read line; do if [ $(expr match "$line" ".*'$device'.*is running.*") -gt 0 ]; then echo "Adding '$device' to br-'$Network'"; brctl addif br-'$Network' '$device'; fi; done)'
+		procd_set_param stdout 1
+		procd_set_param stderr 1
+		procd_set_param netdev "br-$Network"
+		procd_close_instance
+	fi
+}
+
+service_triggers() {
+	procd_add_reload_trigger "plc" "network"
+}
+
+reload_service() {
+	stop
+	start
+}
+
+stop_service() {
+	local device
+	local Network
+
+	config_load plc
+	config_get Network config Network
+	config_load network
+	config_get device plc device
+
+	if [ ! -z "$Network" ]; then
+		brctl delif "br-$Network" "$device"
+	fi
+}
+
+service_stopped() {
+	local PibPath
+	local Mac
+	local device
+
+	config_load plc
+	config_get PibPath config PibPath
+	config_get Mac config Mac
+	config_load network
+	config_get device plc device
+
+	if [ ! -z "$PibPath" ] && [ -f "${PibPath}.tmp" ]; then
+		rm "${PibPath}.tmp"
+	fi
+
+	if [ -z "$Mac" ]; then
+		Mac="$(mtd_get_mac_ascii art protest_plc_mac)"
+	fi
+
+	plctool -i "$device" -R "$Mac"
+}
+
+setup() {
+	error=0
+	if [ -z "$(which unsquashfs)" ]; then
+		echo "unsquashfs missing. Install squashfs-tools-unsquashfs package" >&2
+		error=1
+	fi
+	if [ $error -eq 1 ]; then
+		exit 1
+	fi
+
+	cd /tmp
+	FW="COVRP2500A1_FW101b08_decrypted.bin"
+	wget -O "$FW" "http://pmdap.dlink.com.tw/PMD/GetAgileFile?itemNumber=FIR1800225&fileName=COVRP2500A1_FW101b08_decrypted.bin&fileSize=1.5990457E7;1.5992229E7;65141.0;"
+
+	unsquashfs "$FW" /lib/plc
+	mkdir -p /etc/plc/
+	cp squashfs-root/lib/plc/* /etc/plc/
+	rm -rf squashfs-root
+	rm "$FW"
+
+	options=/etc/plc/COVRP2500*.pib
+	count=$(echo $options | wc -w)
+	i=""
+	while [ -z "$i" ] || [ $i -lt 1 ] || [ $i -gt $count ]; do
+		i=1
+		for f in /etc/plc/COVRP2500*.pib; do
+			echo "${i}) $f"
+			i=$((i+1))
+		done
+		echo -n "Select PibPath [1-${count}]: "
+		read i
+	done
+	pibpath=$(echo /etc/plc/COVRP2500*.pib | awk '{print$'$i'}')
+	uci set plc.config.PibPath=$pibpath
+
+	nvmpath=$(echo /etc/plc/*.nvm)
+	uci set plc.config.NvmPath=$nvmpath
+
+	echo -n "NetworkPasswd (leave empty to use default plc_networkpwd): "
+	read networkpwd
+	if [ -z "$networkpwd" ]; then
+		networkpwd="$(mtd_get_key art plc_networkpwd)"
+	fi
+	uci set plc.config.NetworkPasswd="$networkpwd"
+	uci set plc.config.Nmk="$(hpavkey -M "$networkpwd")"
+	uci set plc.config.NmkSelected='true'
+
+	uci set plc.config.Mac="$(mtd_get_key art protest_plc_mac)"
+
+	dek="$(mtd_get_key art plc_dek)"
+	uci set plc.config.Dek="$dek"
+	uci set plc.config.Dak="$(hpavkey -D "$dek")"
+
+	uci set plc.config.AdapterName="$(uci get system.@system[0].hostname)"
+
+	echo -n "Enable plc [0-1]: "
+	read i
+	if [ ! -z "$i" ] && [ $i -eq 1 ]; then
+		uci set plc.config.Enabled=1
+		enable
+	else
+		uci set plc.config.Enabled=0
+		disable
+	fi
+
+	echo -n "Automatically add to br-lan bridge [0-1]: "
+	read i
+	if [ ! -z "$i" ] && [ $i -eq 1 ]; then
+		uci set plc.config.Network="lan"
+	else
+		uci set plc.config.Network=""
+	fi
+
+	# Commit changes
+	if [ ! -z "$(uci changes plc)" ]; then
+		uci commit plc
+	fi
+}
